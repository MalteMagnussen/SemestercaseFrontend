{"version":3,"sources":["components/NavBar.jsx","components/map/MapFeatures.jsx","components/util/WindowDimensions.jsx","components/map/LeafletMap.jsx","ScrollToTop.jsx","App.js","index.js"],"names":["NavBar","useState","selectedNavItem","setSelectedNavItem","Navbar","bg","variant","expand","Brand","onClick","href","style","marginLeft","Toggle","aria-controls","Collapse","id","Nav","className","activeKey","onSelect","selectedKey","defaultActiveKey","gameArea","type","properties","name","features","geometry","coordinates","MapFeatures","setZone","feature","lat","lng","GeoJSONFeature","GeoJSON","data","Marker","position","Popup","getWindowDimensions","window","width","innerWidth","height","innerHeight","L","require","styles","grid","paddingLeft","paddingRight","row","marginRight","col1","col2","myPadding","Credits","TileLayer","url","attribution","Forecasts","startLocation","setLat","setLng","zone","mapOptions","center","zoom","useEffect","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","leafletHeight","Container","fluid","Row","Col","sm","Map","e","latlng","withRouter","history","unlisten","listen","scrollTo","NoMatch","App","exact","path","component","MapPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.250edb32.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n  const [selectedNavItem, setSelectedNavItem] = useState(\"#/\");\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        onClick={() => setSelectedNavItem(\"#/\")}\r\n        href=\"#/\"\r\n        style={{ marginLeft: \"37px\" }}\r\n      >\r\n        Fullstack\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav\r\n          className=\"mr-auto\"\r\n          activeKey={selectedNavItem}\r\n          onSelect={(selectedKey) => setSelectedNavItem(selectedKey)}\r\n          defaultActiveKey=\"#/\"\r\n        >\r\n          {/* <Nav.Link href=\"#/map\">Map</Nav.Link> */}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Marker,\r\n  Popup,\r\n  // FeatureGroup,\r\n  // Circle,\r\n  // Rectangle\r\n  GeoJSON,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst MapFeatures = ({ setZone, feature, lat, lng }) => {\r\n  const GeoJSONFeature = () => {\r\n    return <GeoJSON data={gameArea} />;\r\n  };\r\n\r\n  if (feature === \"zones\") {\r\n    return <GeoJSONFeature />;\r\n  } else if (feature === \"point\") {\r\n    return (\r\n      <>\r\n        <Marker position={[lat, lng]}>\r\n          <Popup>IM A POPUP</Popup>\r\n        </Marker>\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst gameArea = {\r\n  type: \"FeatureCollection\",\r\n  properties: { name: \"DK2\" },\r\n  features: [\r\n    {\r\n      id: \"DK2\",\r\n      type: \"Feature\",\r\n      properties: {},\r\n      geometry: {\r\n        type: \"Polygon\",\r\n        coordinates: [\r\n          [\r\n            [10.9423828125, 55.416543608580064],\r\n            [11.0467529296875, 55.068932343778684],\r\n            [10.810546875, 54.7404787914159],\r\n            [11.2445068359375, 54.58797989384959],\r\n            [11.8927001953125, 54.463652645044796],\r\n            [13.0462646484375, 54.88608683754535],\r\n            [15.287475585937498, 54.930298209559496],\r\n            [15.27099609375, 55.363502833950776],\r\n            [12.711181640625, 55.229023057406344],\r\n            [12.711181640625, 55.50374985927514],\r\n            [12.8759765625, 55.6682913590041],\r\n            [12.601318359374998, 55.91227293006361],\r\n            [12.645263671875, 56.05056742320484],\r\n            [12.50244140625, 56.13330691237569],\r\n            [11.4422607421875, 56.32567522544464],\r\n            [10.772094726562498, 55.73638916286441],\r\n            [10.9423828125, 55.416543608580064],\r\n          ],\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default MapFeatures;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * https://stackoverflow.com/a/36862446/11255140\r\n */\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport MapFeatures from \"./MapFeatures\";\r\nimport useWindowDimensions from \"../util/WindowDimensions\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nconst L = require(\"leaflet\");\r\n\r\nconst Forecasts = () => {\r\n  const startLocation = [57.42630884997942, -1.7578125000000002];\r\n  const [lat, setLat] = useState(startLocation[0]);\r\n  const [lng, setLng] = useState(startLocation[1]);\r\n  const [feature, setFeature] = useState(\"zones\");\r\n  const [zone, setZone] = useState();\r\n\r\n  const handleClick = (e) => {\r\n    setLat(e.latlng.lat);\r\n    setLng(e.latlng.lng);\r\n  };\r\n  const mapOptions = {\r\n    center: [...startLocation],\r\n    zoom: 4,\r\n  };\r\n\r\n  // This useEffect runs once when page loads.\r\n  useEffect(() => {\r\n    // The following is magic, to allow Marker to work. From: https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-541142178\r\n    delete L.Icon.Default.prototype._getIconUrl;\r\n    L.Icon.Default.mergeOptions({\r\n      iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n      iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n      shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n    });\r\n  }, []);\r\n\r\n  const { height, width } = useWindowDimensions();\r\n  const leafletHeight = height - 56;\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col style={styles.col1} sm=\"auto\">\r\n            HELLO PUT THINGS HERE\r\n          </Col>\r\n          <Col style={styles.col2}>\r\n            <Map\r\n              style={{ height: `${leafletHeight}px`, width: `100%` }}\r\n              id=\"MyMap\"\r\n              onClick={handleClick}\r\n              {...mapOptions}\r\n            >\r\n              {Credits} {/* Always need credits */}\r\n              <MapFeatures\r\n                zone={zone}\r\n                setZone={setZone}\r\n                feature={feature}\r\n                lat={lat}\r\n                lng={lng}\r\n              />\r\n            </Map>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  grid: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  row: {\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n  },\r\n  col1: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    width: \"30%\",\r\n  },\r\n  col2: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  myPadding: {\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n};\r\n\r\nconst Credits = (\r\n  <>\r\n    <TileLayer\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    />\r\n    <TileLayer\r\n      url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n      attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\r\n    />\r\n  </>\r\n);\r\n\r\nexport default Forecasts;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport NavBar from \"./components/NavBar.jsx\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport MapPage from \"./components/map/LeafletMap.jsx\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <NavBar></NavBar>\r\n\r\n      <HashRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MapPage} />\r\n          <Route path=\"*\" component={NoMatch} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <>\r\n      <br />\r\n      <h1 style={{ marginLeft: 30 }}>There is nothing here.</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}